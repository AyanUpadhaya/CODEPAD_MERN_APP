export const LANGUAGE_VERSIONS = {
  javascript: "18.15.0",
  typescript: "5.0.3",
  python: "3.10.0",
  java: "15.0.2",
  csharp: "6.12.0",
  php: "8.2.3",
};

export const CODE_SNIPPETS = {
  javascript: `\nfunction greet(name) {\n\tconsole.log("Hello, " + name + "!");\n}\n\ngreet("Alex");\n`,
  typescript: `\ntype Params = {\n\tname: string;\n}\n\nfunction greet(data: Params) {\n\tconsole.log("Hello, " + data.name + "!");\n}\n\ngreet({ name: "Alex" });\n`,
  python: `\ndef greet(name):\n\tprint("Hello, " + name + "!")\n\ngreet("Alex")\n`,
  java: `\npublic class HelloWorld {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println("Hello World");\n\t}\n}\n`,
  "c##": `\nusing System;\n\nnamespace HelloWorld\n{\n\tclass Hello { \n\t\tstatic void Main(string[] args) {\n\t\t\tConsole.WriteLine("Hello World in C#");\n\t\t}\n\t}\n}\n`,
  php: `<?php\n\n$name = 'Alex';\necho $name;\n`,
  c: `\n#include <stdio.h>\n\nint main() {\n\tprintf("Hello, World!\\n");\n\treturn 0;\n}\n`,
  cpp: `\n#include <iostream>\n\nint main() {\n\tstd::cout << "Hello, World!" << std::endl;\n\treturn 0;\n}\n`,
  html: `\n<!DOCTYPE html>\n<html>\n<head>\n\t<title>Hello World</title>\n</head>\n<body>\n\t<h1>Hello, World!</h1>\n</body>\n</html>\n`,
  css: `\nbody {\n\tfont-family: Arial, sans-serif;\n\ttext-align: center;\n\tbackground-color: #f4f4f4;\n}\n`,
  ruby: `\ndef greet(name)\n\tputs "Hello, #{name}!"\nend\n\ngreet("Alex")\n`,
  go: `\npackage main\n\nimport "fmt"\n\nfunc main() {\n\tfmt.Println("Hello, World!")\n}\n`,
  kotlin: `\nfun main() {\n\tprintln("Hello, World!")\n}\n`,
  swift: `\nimport Foundation\n\nprint("Hello, World!")\n`,
  shell: `\n#!/bin/bash\n\necho "Hello, World!"\n`,
  sql: `\nSELECT 'Hello, World!';\n`,
  r: `\nprint("Hello, World!")\n`,
  perl: `\nprint "Hello, World!\\n";\n`,
  dart: `\nvoid main() {\n\tprint("Hello, World!");\n}\n`,
  rust: `\nfn main() {\n\tprintln!("Hello, World!");\n}\n`,
  scala: `\nobject HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t\tprintln("Hello, World!")\n\t}\n}\n`,
  xml: `\n<note>\n\t<to>World</to>\n\t<from>Alex</from>\n\t<message>Hello, World!</message>\n</note>\n`,
  json: `\n{\n\t"message": "Hello, World!"\n}\n`,
  yaml: `\nmessage: Hello, World!\n`,
  markdown: `\n# Hello, World!\n\nThis is a markdown file.\n`,
  txt: `Hello, World!`,
};
